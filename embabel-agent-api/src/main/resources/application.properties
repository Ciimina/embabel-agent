spring.application.name=agent-api
spring.threads.virtual.enabled=true

spring.output.ansi.enabled=ALWAYS

management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.ai.chat.observations.include-prompt=true
spring.ai.chat.observations.include-completion=true

# Automatically register @Agent beans
embabel.agent-platform.scanning.auto=true

# How certain should the LLM be that this is the correct goal
# for user input?
embabel.autonomy.agent-confidence-cut-off=0.6
embabel.autonomy.goal-confidence-cut-off=0.6

embabel.process-id-generation.include-agent-name=false
embabel.process-id-generation.include-version=false

embabel.model.llms.best=gpt-4o
embabel.model.llms.cheapest=gpt-4o-mini

#embabel.model.embedding-services.chunk=text-embedding-ada-002
#embabel.model.embedding-services.schema=text-embedding-ada-002

spring.ai.ollama.base-url=http://localhost:11434
spring.ai.openai.api-key=${OPENAI_API_KEY}

logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(%logger{0}){cyan} %clr(-){faint} %msg%n

# Custom logging
#logging.level.com.embabel.agent.core.support.BlackboardWorldStateDeterminer=DEBUG
#logging.level.com.embabel.agent.api.annotation.support.AgentMetadataReader=DEBUG

# This is a hack to stop legitimate error messages. See https://github.com/embabel/embabel-agent/issues/51
logging.level.org.springframework.context.support.PostProcessorRegistrationDelegate=ERROR